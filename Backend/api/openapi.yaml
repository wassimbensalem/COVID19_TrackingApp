openapi: 3.0.1
info:
  title: Corona App
  description: API Description for the Corona App of Team Golf of Internet Praktikum
    Telecooperation SS2020
  version: 1.0.0
externalDocs:
  description: GitLab Project
  url: https://git.rwth-aachen.de/iptk/ss20/team-golf
servers:
  - url: /
tags:
  - name: profile
    description: User profile
  - name: trace
    description: GPS traces
  - name: achievments
    description: achievments
  - name: news
    description: News articles
  - name: announcments
    description: Offical Announcments
  - name: services
    description: Service offers
  - name: statistics
    description: Offical and Internal Statistics
  - name: testAPI
    description: just for test
paths:
  /services/{servicesID}:
    get:
      tags:
        - services
      summary: get services by ID
      description: Returns services of a unique ID
      parameters:
        - name: servicesID
          in: path
          description: ID of services to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/services'
            application/json:
              schema:
                $ref: '#/components/schemas/services'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: service not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: services
    put:
      tags:
        - services
      summary: put services by ID
      description: puts services of a unique ID
      parameters:
        - name: servicesID
          in: path
          description: ID of service to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/services'
            application/json:
              schema:
                $ref: '#/components/schemas/services'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: service not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: services
    post:
      tags:
        - services
      summary: Find and change services by ID
      description: Returns service of an ID
      parameters:
        - name: servicesID
          in: path
          description: ID of services to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/services'
            application/json:
              schema:
                $ref: '#/components/schemas/services'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: service not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: services
    delete:
      tags:
        - services
      summary: delete services by ID
      description: deletes services with ID
      parameters:
        - name: servicesID
          in: path
          description: ID of service to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/services'
            application/json:
              schema:
                $ref: '#/components/schemas/services'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: services not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: services
  /statistics/{statisticsID}:
    get:
      tags:
        - statistics
      summary: get statistics by ID
      description: Returns statistics of a unique ID
      parameters:
        - name: statisticsID
          in: path
          description: ID of statistics to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/statistics'
            application/json:
              schema:
                $ref: '#/components/schemas/statistics'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: statistics not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: statistics
    put:
      tags:
        - statistics
      summary: put  statistics by ID
      description: puts statistics of a unique ID
      parameters:
        - name: statisticsID
          in: path
          description: ID of statistics to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/statistics'
            application/json:
              schema:
                $ref: '#/components/schemas/statistics'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: statistics not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: statistics
    post:
      tags:
        - statistics
      summary: Find and change statistics by location's ID
      description: Returns statistics of an ID
      parameters:
        - name: statisticsID
          in: path
          description: ID of statistics to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/statistics'
            application/json:
              schema:
                $ref: '#/components/schemas/statistics'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: statistics not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: statistics
    delete:
      tags:
        - statistics
      summary: delete statistics by ID
      description: deletes statistics with ID
      parameters:
        - name: statisticsID
          in: path
          description: ID of statistics to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/statistics'
            application/json:
              schema:
                $ref: '#/components/schemas/statistics'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: statistics not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: statistics
  /news/{newsID}:
    get:
      tags:
        - news
      summary: get news by ID
      description: Returns news of a unique ID
      parameters:
        - name: newsID
          in: path
          description: ID of news to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/news'
            application/json:
              schema:
                $ref: '#/components/schemas/news'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: news
    put:
      tags:
        - news
      summary: put  news by ID
      description: puts news of a unique ID
      parameters:
        - name: newsID
          in: path
          description: ID of news to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/news'
            application/json:
              schema:
                $ref: '#/components/schemas/news'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: news
    post:
      tags:
        - news
      summary: Find and change announcments by location's ID
      description: Returns a single achievment
      parameters:
        - name: newsID
          in: path
          description: ID of news to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/news'
            application/json:
              schema:
                $ref: '#/components/schemas/news'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: news
    delete:
      tags:
        - news
      summary: delete news by ID
      description: deletes news with ID
      parameters:
        - name: newsID
          in: path
          description: ID of news to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/news'
            application/json:
              schema:
                $ref: '#/components/schemas/news'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: news
  /announcments/{announcmentslocationID}:
    get:
      tags:
        - announcments
      summary: get announcments by location's ID
      description: Returns announcments of a location
      parameters:
        - name: announcmentslocationID
          in: path
          description: ID of location to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/announcments'
            application/json:
              schema:
                $ref: '#/components/schemas/announcments'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: announcments
    put:
      tags:
        - announcments
      summary: put  announcments by location's ID
      description: puts announcments of a location
      parameters:
        - name: announcmentslocationID
          in: path
          description: ID of location to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/announcments'
            application/json:
              schema:
                $ref: '#/components/schemas/announcments'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: announcments
    post:
      tags:
        - announcments
      summary: Find and change announcments by location's ID
      description: Returns a single achievment
      parameters:
        - name: announcmentslocationID
          in: path
          description: ID of announcments to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/achievments'
            application/json:
              schema:
                $ref: '#/components/schemas/achievments'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: announcments
    delete:
      tags:
        - announcments
      summary: delete announcments by location's ID
      description: deletes a single locationID
      parameters:
        - name: announcmentslocationID
          in: path
          description: ID of announcments to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/achievments'
            application/json:
              schema:
                $ref: '#/components/schemas/achievments'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: announcments
  /achievments:
    put:
      tags:
        - achievments
      summary: update an existing Achievment
      requestBody:
        description: Profile object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/achievments'
          application/xml:
            schema:
              $ref: '#/components/schemas/achievments'
        required: true
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
        '405':
          description: Validation exception
          content: {}
      security:
        - api_key: []
      x-codegen-request-body-name: body
      x-swagger-router-controller: achievments

  /achievments/{achievmentID}:
    get:
      tags:
        - achievments
      summary: get achievment by ID
      description: Returns a single achievment
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/achievments'
            application/json:
              schema:
                $ref: '#/components/schemas/achievments'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: achievments
    put:
      tags:
        - achievments
      summary: put achievment by ID
      description: gives a single ID achievment
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/achievments'
            application/json:
              schema:
                $ref: '#/components/schemas/achievments'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: achievments
    post:
      tags:
        - achievments
      summary: Find and change achievment by ID
      description: Returns a single achievment
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/achievments'
            application/json:
              schema:
                $ref: '#/components/schemas/achievments'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: achievments
    delete:
      tags:
        - achievments
      summary: delete achievment by ID
      description: deletes a single ID achievment
      parameters:
        - name: achievmentID
          in: path
          description: ID of month to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/achievments'
            application/json:
              schema:
                $ref: '#/components/schemas/achievments'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: achievments
  /achievments/{achievmentID}/name:
    post:
      tags:
        - achievments
      summary: uploads a name
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to update
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: achievments
    get:
      tags:
        - achievments
      summary: get a name of an achievment
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to get
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: achievments
    put:
      tags:
        - achievments
      summary: puts a name
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to put
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: achievments
    delete:
      tags:
        - achievments
      summary: deletes a name
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: achievments
  /achievments/{achievmentID}/description:
    post:
      tags:
        - achievments
      summary: uploads a description
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to update
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: achievments
    get:
      tags:
        - achievments
      summary: get a description of an achievment
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to get
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: achievments
    put:
      tags:
        - achievments
      summary: puts a description
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to put
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: achievments
    delete:
      tags:
        - achievments
      summary: deletes a description
      parameters:
        - name: achievmentID
          in: path
          description: ID of achievment to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: achievments
  /achievments/{achievmentID}/uploadImage:
    post:
      tags:
        - achievments
      summary: uploads an image
      operationId: uploadFile
      parameters:
        - name: achievementId
          in: path
          description: ID of achiev to update
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: achievments
  /profile:
    put:
      tags:
        - profile
      summary: Update an existing profile
      operationId: updateProfile
      requestBody:
        description: Profile object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/xml:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
        '405':
          description: Validation exception
          content: {}
      security:
        - api_key: []
      x-codegen-request-body-name: body
      x-swagger-router-controller: Profile
    post:
      tags:
        - profile
      summary: Add a new profile
      operationId: addProfile
      requestBody:
        description: PProfile object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/xml:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - api_key: []
      x-codegen-request-body-name: body
      x-swagger-router-controller: Profile
  /profile/{profileId}:
    get:
      tags:
        - profile
      summary: Find profile by ID
      description: Returns a single profile
      operationId: getProfileById
      parameters:
        - name: profileId
          in: path
          description: ID of pet to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Profile'
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: Profile
    post:
      tags:
        - profile
      summary: Updates a profile with form data
      operationId: updateProfiletWithForm
      parameters:
        - name: profileId
          in: path
          description: ID of profile that needs to be updated
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: Profile
    delete:
      tags:
        - profile
      summary: Deletes a profile
      operationId: deleteProfile
      parameters:
        - name: api_key
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: profileId
          in: path
          description: Profile id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Profile not found
          content: {}
      security:
        - api_key: []
      x-swagger-router-controller: Profile
  /profile/{profileId}/uploadImage:
    post:
      tags:
        - profile
      summary: uploads an image
      operationId: uploadFile
      parameters:
        - name: profileId
          in: path
          description: ID of profile to update
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []
      x-swagger-router-controller: Profile
components:
  schemas:
    news:
      type: object
      properties:
        newsID:
          type: integer
          format: int64
      xml:
        name: news
    announcments:
      type: object
      properties:
        announcmentslocationID:
          type: integer
          format: int64
      xml:
        name: announcments
    statistics:
      type: object
      properties:
        announcmentslocationID:
          type: integer
          format: int64
      xml:
        name: statistics

    achievments:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: achievments
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    services:
      type: object
      properties:
        servicesID:
          type: integer
          format: int64
      xml:
        name: services
    Profile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        status:
          type: string
          description: user health status
          enum:
            - green
            - yellow
            - red
      example:
        firstName: firstName
        lastName: lastName
        phone: phone
        id: 0
        username: username
        status: green
      xml:
        name: Profile
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      example:
        code: 0
        type: type
        message: message
    body:
      properties:
        name:
          type: string
          description: Updated name of the User
        status:
          type: string
          description: Updated status of the User
    body_1:
      properties:
        additionalMetadata:
          type: string
          description: Additional data to pass to server
        file:
          type: string
          description: file to upload
          format: binary
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
